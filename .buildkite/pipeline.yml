steps:
  - label: "Julia v1"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
      - JuliaCI/julia-test#v1: ~
      - JuliaCI/julia-coverage#v1:
          codecov: true
    agents:
      queue: "juliagpu"
      cuda: "*"
    if: build.message !~ /\[skip tests\]/
    timeout_in_minutes: 30

  - label: "Pluto Example Notebook"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
    agents:
      queue: "juliagpu"
      cuda: "*"
    commands: |
      julia -e 'import Pkg
        tmpenv = mktempdir()
        Pkg.activate(tmpenv)
        Pkg.add([
          Pkg.PackageSpec(name="PlutoSliderServer", version="0.3.2-0.3"),
          Pkg.PackageSpec(name="Documenter", version="0.27"),
          Pkg.PackageSpec(name="Pluto"),
        ])

        import Pluto
        Pluto.PkgUtils.activate_notebook("examples/notebook.jl")
        Pkg.add([Pkg.PackageSpec(path=pwd())])
        Pkg.activate(tmpenv)

        import PlutoSliderServer
        PlutoSliderServer.github_action("examples";
          Export_cache_dir="pluto_state_cache",
          Export_baked_notebookfile=false,
          Export_baked_state=false,
          # more parameters can go here
        )
        using Documenter
        deploydocs(;
          repo="github.com/JuliaLabs/AztecDiamonds.jl",
          devbranch="main",
          dirname="examples",
          target="examples",
          forcepush=true,
          push_preview=true,
        )'
    if: build.message !~ /\[skip tests\]/
    timeout_in_minutes: 30

env:
  SECRET_CODECOV_TOKEN: "MLMmNsIi9z+5uGcjkWJXY8ZGbQC1srQhklvMP2IjZlNP53569OKThGRgV9Lkc6s589VcADNKx6lwPc/1YQZBCT7ES40tRKmf5kPn5QVuAZOENfVyIvu3T1Q71vzHL1/XvZoEkMqCmmHKb+orBJbwm8mSzWTMN+ta7fl2Wa0ZJc4gV/dYyeAceiuqXe9S7BCUN/VHJub/4ftEdH11Z1FG9t9SmnOgVU8ZzCdCgelWx5FwosADfuZJsDPLgz4dkhgFgHLxytr+1a9gI680MhfnLBZPg5fEs4TOU3D4Nrxbsnmf0zwX8KHvNrgi5YEcnEy7WddHA36T7LhHCrsmnCuybQ==;U2FsdGVkX1+DQcFB9i6MzGvFWP6yNN5kv42uXHdspYN+8BEj+42qrS85E5yB3G/frbu53SfPP4DfMRx/VQdOpQ=="
  SECRET_DOCUMENTER_KEY: "Czo+XelYUvg8f+gC93TfNBYPj6T/hx6P4+BgCAHAkpfTmdKeJ15aI4KPCghanyWllvUGXfRjYbA+wq++yDl7ODo6cECuXjdXCWlf7sBdHRzcWwGxOsiznxGMsvCJno21m+/wlnfYbpGJFNnKu6hGefSFxNoE8CtRuQ0OkvmrUWookVos8lq+/U9RP/daw8amj4F0V6nXxGhktf5ILaK49vK7cwz/X1ShA10hJtn3+G0bryuYe6hJuDVstVSkp9r8QvpoznwQWYB9qFTVpvAgXVjwKGDTbN8rlAIiDaquRNC220yx4DCOzVl51Ah7fIYvQCidl6QPgMUY2ZOHxupcxw==;U2FsdGVkX1/7GV+8GOP9S0RapbqoQ4nfvuGBpM9YRL8HjoJUA5bbDTmHxVG+2PXU5gd/5yfMC9kF0xwTRU/Q2PueUnjOrYfN/XJ3+yIN5e9R9mcwqGAwrJZngJ/P84QXWFK6khThdxrdDjsfrTqepVT668cY6VsGQ/OTlGz+pAEoGLR8bCaEoz2VD8Yww5ADhlVs53rhUWKUkFbT0Z36nnS6y9n55XHi59F/bHgrufLV3UPDxwPheyTJGnYieS8R2oHv4bMljUaZJNizT+EfeRnrd+iraAubN78JJOKyNe8e2XG9jDuUZh0PY9pp+TpJ09kbKoTUGcDSryXqPYiSByDkqycCcan8x1qbgy6fwgMp97RAkLubvqX+QYCTlkqff4GFfb0iVPlOMuvdZ4P0nKYjEqf+5/NrSKFTpxr84ywLr8v5+o7hehz6uEcBGpDJHNEaTy2UeH/dJ/8VH0rhJiHiXMDQAOc/Zay9AInlw41dikbPw9Ymep0M1+OuHu+C92i0DZKkfATA5UpT+/dnV2HJgGZOJ3fQB/RJ8/U8DApRYR4M/tRu0YDYB2MvYI1WOwF3xkJ02j0o5CoS2YEa10Ea2SfVH3yv7GN9ky4c6UcFueyl7eNo9NBLoBm2F/qqKR7vYjnntoUsmwg8NAabaRY/XOamc4Wovo6dDydcPcerDpygDRbVTFf6vqysBz20l+6RT0TJ9q5Qz5lH4iC4X706JB1NY/ZzgX2UTnnaQxgymSNUaob+/lftK1E1kaWjzIkpcnadTkaFyzM9yZ7/g1FpjQ53L4YsnIbH4YS4Zgu08TQCc+rj/fBKQ+wVvZRDwucqK8j8pDVp596fVB2NWFEHdBjxAv4SRiMXyx7E9l9yv3I5XIrxk0kfgYpR7/wk63JHgErNJd+T/7I6r8h+gmyyebtc7AmxJV96qnFaYd+W+KjDMkLK4T5JKY/y6dXPALBJkeiqPyU3UxEMxPMpN3z6BUzYrgnY+mDtX9brbgiWlABN2gE4QqE8e27lEb1Jyvm+DvpcOObSymW+3c8nxKAQcl+tR2RcZacQ5/ty4clw3XJ7QqOO74ZE9vBpia8OYn/ARY2ek6H5nWtOyJv4+tJ5MpzWJRoB3mmXq6gde3i1KrlKn0LO36HaduDVTDRV0oGpzZhTJrQuQ53c3+zJiK9vqtehRlHjfXVQZ9z8kigRMjiOo3a5ZAPIVcTJpShJD5rKFD+9AdAW4pMBv3IbpjGS21+taa7Is/W3p6C9CnIA7ABIp+YcuJUSSvbaDjAegEpaoo/5KwesjVDJiA34/dlcy7xbVFubkPfbd5kAEb4apQGPCCyWjN1W6Rfz/4IdFUyM1U3pIfHdYCnY0h9+rJs6K/wfMuMuUT4RQiQ9rD3Kx4PArbIgvRH7yL4+/HfX1A9vBHIbPM0xEeMJTrBmQjU15nuXc1bvocFlsWAxThltlQkX9Os8jdfejsH2Cr2LtONNv1GN/es8qbeCBinZ9foKiphgWv7hAZRjn+W+3dWKqDEWrXwW/a5IAH3WN1qtzpm8Jdjnvstu91bBrBPHRraSeddrXrr2+kr+uySZRQ0EIZBVs8Xq9SF7MwVkBJ3A88Gw5MsLpQ0nrCHW1s01BMe5mMXWoJeEZsccYK3Tvx7LFNW/KUgc/8PHmBiVRMAOSR9/3yfBbuHCt5V1zYOq3S5+f+JxG23lMVBRi15pCHDVAfkzEOMjprjAnK7nPVlXFFZFo4i/6ABK6/BzoWGdrcFr2yyjhT7TFjUHLQujalyuU8I5cQhLvAX3GNXOqcYXFbQg8u6Rluw8fyiDC/TV1x3qR67d2t0PShxCx3cAoN5njyp41x4ABfjo9rso1EqTiN9IwaKKQeuDGYas58CqCd+pc0Ekowb2gw4qstsUqOj+fxdFaeOknCcfI26wwxu6uH8AwmiKKp065yfNRWwb4X2qrC/PkfNjpGiwF2oTmCVf/0Of+ue7J/5pUMicSMPEcfI8nELrB1xK/UmUuHLopTnScXVEjIcNME0c7z3/p8RW6oIhZLaLySjlrv1Hf0zjRxKIiBsp41xl3V+/xLWb6XuxcDgwb+0CBeCMEqvyCVKfNXLu+I4SjOPNTReIx7o2eUWN3IZJhQ8QTeJ4QP2UYl5oy9aOE3X3l/RISjmfy04LeVihaFP4bx01HxqBFLtE96jjxwGnToklAF9vgBz1JysskOAdPcwWhxhyd+00x0gFRSf+sNyrKShbIxlmfc+OweC6WfGdhURW/9y/m5Lzk6r9b+0xlrKYVMqacoKj3MX7nNu5wN+LCl1KhyO/fVwuFEqzayoTCjt5/oyB5d3886nAEvjO3Li+djgshJrx9JkeFrwLNlqqTcQmTH0yoUw0yg8mo6LyqsQZAMnb+w1husBXJVwCfbjYra2UiW8xzP9i4YHrPsrBu8IkGciz6nkEuz26eyA9J2xXeU6Q7n+vY/09UeGtj8mYsue5HbjswMZ8wjbM5FaGzxIrP5mAq+Ytb9NgQ+Xi2Mu4UNNyu/a62VZeYmqwFgYL9+FFVyAS7Co4CK9A4NdEN/Iu2Ie/yAVZdIQwuJNQvuhEhnp07KMXYrUmlVf2GsLd1QKlWUAToD6YumVEktL2NMjw+UokFhBPiwndlo/27RGTYg9Ch0Fg6+P+wUbJ5YGyOxvEWXSgqQqHldiy/AC3XlX0hnU5ZJ2cnDeQRLWUP1qfvCkmrIm1DP3aq9YzHd9tN14Ssq4eY+Kda0je1VXfnWanw+YUSO66YZwFvdl50pJtBVu7ZJtG9f92GoIcrQqjYv+VIKMYf3aUqs126+8LUDwo1Q3D6Q4ZImjL+60jS91cIjX7qIqgZoMUPW3C4ivVSOR8hn99nA6PDvhj9nznKUKqVYvjSf7nJVlpeo8+fZ4S7058eL2zbXHVcpcaQsdPeK8yHlWkcgXcm7DU31d4tbug8SIo8O//FESl5rFF005vMA6TCDfT6jvcAWlsWlOFxEM8jfT6wTKUY2VozTiuw0QZuzPNtfeC8OmrvOR/qI2BQ/MuToew5SmmG04EWyrnxO54Z0XUGj1sIlBVp9Q5oOGV55mySAYsYbG5iybOGwc9YFZAlOTXPSjRuhKvgYq13LJYHVbV2aBSkw2jwM/Ez7ODJaTwUOdj201PgiaF1/xiTQvl2qt9I3rHDBN78SOt8g2drSqc+FNypczgUq/z9XdNSYrUfL1duEPxqwDZdAWmieayY8T4Um27Wcb1iA+gmuQgBzfqjt3ttUWgJKkiGxpy1wS05HgIPVs/a8HnvOS7R4pUuRG1Kupx9zDPj2GFTgtnDarE0X3OQ7Ifo1DPVolJ7xuteWGz1qJzi4snXHZBZX5YoPNPKd+K0F1iKIovroBOKinc9He/RhcHAydhaiTkT3WyNJ/plUB3StSWCy/MkQnyjZRTZSN2s11GuwBwZtuDPLUQA8Ff4JOOewG1RcZ6spuMVWfpJZ60XjWlleh61r7GjO9/UhrCC6YWgc0AkrvLZC0Vt6a+GKrrSCjvDrp9y7tdkpN7BRMbMiUwPosNYGZv334KE5wnsYSj6lDCMMnxz94wWG+R4yDa9nkZUJLetSKvAOeDXfT+e9IMq3gNDpwET+oIK+UansbXxS/8BzrqSuDJSsndKa2dUWsLIFu/5x4hyvsQ9caFTyU9nZwlkTTZI3+95JWBzbLasxp/0n5cJ5jNrY536ZnVzFPcnG4d80qGAkVm+YIJP71sAO/IU4sbCi5avHAn2y0ntBVjvS11VmhNXlLiL6kz6NUFqX0dZw97GQMaJg9s6xYHKrMAZfDTNCL02bpEk8SHnNgX9TqlCM0IZEGLnvwMFWDAtiftblVAkcRymyZb7zj0JbaFIp97/GDCBvofbFMu9aICyn0kkKJCyDsNSdaPi7Jm74X+TBs99tV9tWYClSRApqbrq4xaqeD3Xyl1FGh2HqhfQuI3uMkyHvho6GgF3dF9WFYy1WIZpwvJy0B2/ACGn6HfsFfAW+XoE56O0KrHg182ycKBW+jwjCybnSy2IDcSDmLF1Ai4QGeh6to56IKzANtltnrlQXAAhWYVSIjn6r9V4lisbdSvzpf9m2pwK+Rwp911SdHzAUEfgKb56aW2eSuiMslrE0gjbOAPl7c4UN3PwfAAEIhmBUJxeWrvo0kt3zkVCYfwKmACGg2IhAQo64q7+tbeYRtgnBIBN4BZeo9hQOgPSULNzFEdY+31Oz6fHWnP1xViVDMfE0hyI/U8exXstDQKDKQ6ztOH4ldICPTTYRh43RjUonOjIqlJzqLtbb/V9Xla8iDH9lkwv/mIdRkiz78niIVsM+FgGlxY6ql3HiIPj1Puh2mSizRjxvdfC5N5ZYclbHNphFK1AUGJhXxgcZTEmoKwRoBQ3kU5GbAWFTpup5GVDIo="
